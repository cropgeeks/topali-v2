/*
 * AdvancedPhyML.java
 *
 * Created on 07 September 2007, 08:23
 */

package topali.gui.dialog.jobs.tree.phyml;

import java.util.List;

import javax.swing.*;

import topali.data.*;
import topali.data.models.*;
import topali.gui.Prefs;
import topali.var.utils.Utils;

/**
 *
 * @author  dlindn
 */
public class AdvancedPhyML extends javax.swing.JPanel {
    
	SequenceSet ss;
	PhymlResult result;
	
    /** Creates new form AdvancedPhyML */
    public AdvancedPhyML(SequenceSet ss, TreeResult result) {
    	this.ss = ss;
		this.result = new PhymlResult();
        initComponents();
        initValues();
        
        if(result!=null)
        	initPrevResult((PhymlResult)result);
    }
    
    private void initValues() {
    	SequenceSetParams params = ss.getParams();
		
		List<Model> mlist = ModelManager.getInstance().listPhymlModels(ss.isDNA());
		String[] models = new String[mlist.size()];
		for(int i=0; i<mlist.size(); i++)
				models[i] = mlist.get(i).getName();
		
		ComboBoxModel cm = new DefaultComboBoxModel(models);
		this.subModel.setModel(cm);
		
		Model m = params.getModel();
		if(Utils.indexof(models, m.getName())==-1) {
			if(ss.isDNA())
				m = ModelManager.getInstance().generateModel(Prefs.phyml_dnamodel_default, m.isGamma(), m.isInv());
			else
				m = ModelManager.getInstance().generateModel(Prefs.phyml_proteinmodel_default, m.isGamma(), m.isInv());
		}
		
		this.subModel.setSelectedItem(m.getName());
		
		this.gamma.setSelected(params.getModel().isGamma());
		this.inv.setSelected(params.getModel().isInv());
		
		SpinnerNumberModel mNBoot = new SpinnerNumberModel(Prefs.phyml_bootstrap, 0, 1000, 10);
		this.bootstraps.setModel(mNBoot);
    }
    
    public void setDefaults() {
		SequenceSetParams params = ss.getParams();
		
		List<Model> mlist = ModelManager.getInstance().listPhymlModels(ss.isDNA());
		String[] models = new String[mlist.size()];
		for(int i=0; i<mlist.size(); i++)
				models[i] = mlist.get(i).getName();
		
		ComboBoxModel cm = new DefaultComboBoxModel(models);
		this.subModel.setModel(cm);
		
		Model m = params.getModel();
		if(Utils.indexof(models, m.getName())==-1) {
			if(ss.isDNA())
				m = ModelManager.getInstance().generateModel(Prefs.phyml_dnamodel_default, m.isGamma(), m.isInv());
			else
				m = ModelManager.getInstance().generateModel(Prefs.phyml_proteinmodel_default, m.isGamma(), m.isInv());
		}
		
		this.subModel.setSelectedItem(m.getName());
		
		this.gamma.setSelected(params.getModel().isGamma());
		this.inv.setSelected(params.getModel().isInv());
		
		SpinnerNumberModel mNBoot = new SpinnerNumberModel(Prefs.phyml_bootstrap_default, 0, 1000, 10);
		this.bootstraps.setModel(mNBoot);
	}
    
    private void initPrevResult(PhymlResult res) {
    	this.bootstraps.setValue(res.bootstrap);
    }
    
    public PhymlResult onOK() {
		
		String name = (String)subModel.getSelectedItem();
		boolean g = gamma.isSelected();
		boolean i = inv.isSelected();
		
		ss.getParams().setModel(ModelManager.getInstance().generateModel(name, g, i));
		
		result.model = ss.getParams().getModel();
		result.bootstrap = (Integer)bootstraps.getValue();
		
		Prefs.phyml_bootstrap = result.bootstrap;
		
		return result;
	}
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        subModel = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        inv = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        gamma = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        bootstraps = new javax.swing.JSpinner();

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Model parameters"));
        jLabel8.setText("Substitution Model:");

        subModel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        subModel.setToolTipText("Substitution model to use");

        jLabel9.setText("Invariant Sites:");

        inv.setToolTipText("Allow invariant sites");
        inv.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        inv.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel10.setText("Gamma:");

        gamma.setToolTipText("Use gamma distribution");
        gamma.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        gamma.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inv)
                    .addComponent(subModel, 0, 98, Short.MAX_VALUE)
                    .addComponent(gamma))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(inv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(gamma))
                .addContainerGap())
        );

        jLabel6.setText("Bootstrap Runs: ");

        bootstraps.setToolTipText("Number of bootstrap runs");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addGap(42, 42, 42)
                        .addComponent(bootstraps, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(21, 21, 21)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bootstraps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner bootstraps;
    private javax.swing.JCheckBox gamma;
    private javax.swing.JCheckBox inv;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JComboBox subModel;
    // End of variables declaration//GEN-END:variables
    
}
