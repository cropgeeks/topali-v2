/*
 * BranchModelPanel.java
 *
 * Created on 10 September 2007, 09:09
 */

package topali.gui.dialog.jobs.cml;

import java.awt.event.*;

import javax.swing.DefaultListModel;

import topali.gui.atv.ATV;
import topali.var.utils.Utils;

/**
 *
 * @author  dlindn
 */
public class BranchModelPanel extends javax.swing.JPanel implements WindowListener{

	String h0;
	public DefaultListModel model = new DefaultListModel();
	public ATV atv;

	CMLBranchDialog parent;

    /** Creates new form BranchModelPanel */
    public BranchModelPanel(CMLBranchDialog parent) {
    	this.parent = parent;
        initComponents();
        hypolist.setModel(model);

        if(parent.result!=null) {
        	for(int i=0; i<parent.result.hypos.size(); i++) {
        		if(i==0) {
        			String tree = parent.result.hypos.get(0).tree;
        			tree = Utils.getNameTree(tree, parent.data.getSequenceSet());
        			setH0(tree);
        		}
        		else {
        			String tree = parent.result.hypos.get(i).tree;
        			tree = Utils.getNameTree(tree, parent.data.getSequenceSet());
        			model.addElement(tree);
        		}
        	}
        }
    }

    public void setH0(String tree) {
    	h0 = tree;
    	model.addElement(tree);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hypolist = new javax.swing.JList();
        remove = new javax.swing.JButton();
        add = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hypotheses"));

        hypolist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                hypolistValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(hypolist);

        remove.setText("Remove");
        remove.setEnabled(false);
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(add)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(remove)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(remove)
                    .add(add)))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hypolistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_hypolistValueChanged
        if(hypolist.getSelectedIndex()>0)
            remove.setEnabled(true);
        else
            remove.setEnabled(false);
    }//GEN-LAST:event_hypolistValueChanged

    public void setDefaults() {
    	for(int i=model.size()-1; i>0; i--) {
    		model.remove(i);
    	}
    	remove.setEnabled(false);
		parent.bRun.setEnabled(false);
    }

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
    	int i = hypolist.getSelectedIndex();
    	if(i>0) {
    		model.remove(i);
    	}

    	if(model.getSize()<2) {
    		remove.setEnabled(false);
    		parent.bRun.setEnabled(false);
    	}
    }//GEN-LAST:event_removeActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
    	atv = new ATV(h0, parent.data.getName(), parent.winMain, this);
    	atv.start();
		//SwingUtilities.invokeLater(atv);

    }//GEN-LAST:event_addActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JList hypolist;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton remove;
    // End of variables declaration//GEN-END:variables


	public void windowActivated(WindowEvent e)
	{
	}


	public void windowClosed(WindowEvent e)
	{
		String tree = atv.getTree();
		tree = tree.replaceAll("_#", " #");
		if(!model.contains(tree))
			model.addElement(tree);

		if(model.getSize()>1) {
    		remove.setEnabled(true);
    		parent.bRun.setEnabled(true);
    	}
		atv = null;
	}


	public void windowClosing(WindowEvent e)
	{
	}


	public void windowDeactivated(WindowEvent e)
	{
	}


	public void windowDeiconified(WindowEvent e)
	{
	}


	public void windowIconified(WindowEvent e)
	{
	}


	public void windowOpened(WindowEvent e)
	{

	}


}
